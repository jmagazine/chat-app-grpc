// @generated by protoc-gen-es v2.0.0
// @generated from file chat.proto (package chat, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";
import type { Timestamp } from "@bufbuild/protobuf/wkt";

/**
 * Describes the file chat.proto.
 */
export declare const file_chat: GenFile;

/**
 * @generated from message chat.User
 */
export declare type User = Message<"chat.User"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string first_name = 2;
   */
  firstName: string;

  /**
   * @generated from field: string last_name = 3;
   */
  lastName: string;

  /**
   * @generated from field: string username = 4;
   */
  username: string;
};

/**
 * Describes the message chat.User.
 * Use `create(UserSchema)` to create a new message.
 */
export declare const UserSchema: GenMessage<User>;

/**
 * @generated from message chat.CreateUserRequest
 */
export declare type CreateUserRequest = Message<"chat.CreateUserRequest"> & {
  /**
   * @generated from field: string first_name = 1;
   */
  firstName: string;

  /**
   * @generated from field: string last_name = 2;
   */
  lastName: string;

  /**
   * @generated from field: string username = 3;
   */
  username: string;

  /**
   * @generated from field: string hash_token = 4;
   */
  hashToken: string;
};

/**
 * Describes the message chat.CreateUserRequest.
 * Use `create(CreateUserRequestSchema)` to create a new message.
 */
export declare const CreateUserRequestSchema: GenMessage<CreateUserRequest>;

/**
 * @generated from message chat.CreateUserResponse
 */
export declare type CreateUserResponse = Message<"chat.CreateUserResponse"> & {
  /**
   * @generated from field: chat.User user = 1;
   */
  user?: User;
};

/**
 * Describes the message chat.CreateUserResponse.
 * Use `create(CreateUserResponseSchema)` to create a new message.
 */
export declare const CreateUserResponseSchema: GenMessage<CreateUserResponse>;

/**
 * @generated from message chat.DeleteUserRequest
 */
export declare type DeleteUserRequest = Message<"chat.DeleteUserRequest"> & {
  /**
   * @generated from field: string username = 1;
   */
  username: string;
};

/**
 * Describes the message chat.DeleteUserRequest.
 * Use `create(DeleteUserRequestSchema)` to create a new message.
 */
export declare const DeleteUserRequestSchema: GenMessage<DeleteUserRequest>;

/**
 * @generated from message chat.DeleteUserResponse
 */
export declare type DeleteUserResponse = Message<"chat.DeleteUserResponse"> & {
  /**
   * @generated from field: chat.User user = 1;
   */
  user?: User;
};

/**
 * Describes the message chat.DeleteUserResponse.
 * Use `create(DeleteUserResponseSchema)` to create a new message.
 */
export declare const DeleteUserResponseSchema: GenMessage<DeleteUserResponse>;

/**
 * @generated from message chat.GetUserRequest
 */
export declare type GetUserRequest = Message<"chat.GetUserRequest"> & {
  /**
   * @generated from field: string username = 1;
   */
  username: string;

  /**
   * @generated from field: string hash_token = 2;
   */
  hashToken: string;
};

/**
 * Describes the message chat.GetUserRequest.
 * Use `create(GetUserRequestSchema)` to create a new message.
 */
export declare const GetUserRequestSchema: GenMessage<GetUserRequest>;

/**
 * @generated from message chat.GetUserResponse
 */
export declare type GetUserResponse = Message<"chat.GetUserResponse"> & {
  /**
   * @generated from field: chat.User user = 3;
   */
  user?: User;
};

/**
 * Describes the message chat.GetUserResponse.
 * Use `create(GetUserResponseSchema)` to create a new message.
 */
export declare const GetUserResponseSchema: GenMessage<GetUserResponse>;

/**
 * @generated from message chat.UpdateUserRequest
 */
export declare type UpdateUserRequest = Message<"chat.UpdateUserRequest"> & {
  /**
   * @generated from field: string username = 1;
   */
  username: string;

  /**
   * @generated from field: map<string, string> updated_fields = 2;
   */
  updatedFields: { [key: string]: string };
};

/**
 * Describes the message chat.UpdateUserRequest.
 * Use `create(UpdateUserRequestSchema)` to create a new message.
 */
export declare const UpdateUserRequestSchema: GenMessage<UpdateUserRequest>;

/**
 * @generated from message chat.UpdateUserResponse
 */
export declare type UpdateUserResponse = Message<"chat.UpdateUserResponse"> & {
  /**
   * @generated from field: chat.User user = 1;
   */
  user?: User;
};

/**
 * Describes the message chat.UpdateUserResponse.
 * Use `create(UpdateUserResponseSchema)` to create a new message.
 */
export declare const UpdateUserResponseSchema: GenMessage<UpdateUserResponse>;

/**
 * @generated from message chat.GetAllUsersRequest
 */
export declare type GetAllUsersRequest = Message<"chat.GetAllUsersRequest"> & {
};

/**
 * Describes the message chat.GetAllUsersRequest.
 * Use `create(GetAllUsersRequestSchema)` to create a new message.
 */
export declare const GetAllUsersRequestSchema: GenMessage<GetAllUsersRequest>;

/**
 * @generated from message chat.GetAllUsersResponse
 */
export declare type GetAllUsersResponse = Message<"chat.GetAllUsersResponse"> & {
  /**
   * @generated from field: repeated chat.User users = 1;
   */
  users: User[];
};

/**
 * Describes the message chat.GetAllUsersResponse.
 * Use `create(GetAllUsersResponseSchema)` to create a new message.
 */
export declare const GetAllUsersResponseSchema: GenMessage<GetAllUsersResponse>;

/**
 * @generated from message chat.ChatMessage
 */
export declare type ChatMessage = Message<"chat.ChatMessage"> & {
  /**
   * @generated from field: google.protobuf.Timestamp timestamp = 1;
   */
  timestamp?: Timestamp;

  /**
   * @generated from field: string sender_id = 2;
   */
  senderId: string;

  /**
   * @generated from field: string recipient_id = 3;
   */
  recipientId: string;

  /**
   * @generated from field: string text = 4;
   */
  text: string;
};

/**
 * Describes the message chat.ChatMessage.
 * Use `create(ChatMessageSchema)` to create a new message.
 */
export declare const ChatMessageSchema: GenMessage<ChatMessage>;

/**
 * @generated from message chat.GetChatMessagesRequest
 */
export declare type GetChatMessagesRequest = Message<"chat.GetChatMessagesRequest"> & {
  /**
   * @generated from field: string sender_id = 1;
   */
  senderId: string;

  /**
   * @generated from field: string recipient_id = 2;
   */
  recipientId: string;
};

/**
 * Describes the message chat.GetChatMessagesRequest.
 * Use `create(GetChatMessagesRequestSchema)` to create a new message.
 */
export declare const GetChatMessagesRequestSchema: GenMessage<GetChatMessagesRequest>;

/**
 * @generated from message chat.GetChatMessagesResponse
 */
export declare type GetChatMessagesResponse = Message<"chat.GetChatMessagesResponse"> & {
  /**
   * @generated from field: repeated chat.ChatMessage messages = 1;
   */
  messages: ChatMessage[];
};

/**
 * Describes the message chat.GetChatMessagesResponse.
 * Use `create(GetChatMessagesResponseSchema)` to create a new message.
 */
export declare const GetChatMessagesResponseSchema: GenMessage<GetChatMessagesResponse>;

/**
 * @generated from message chat.SendChatMessageRequest
 */
export declare type SendChatMessageRequest = Message<"chat.SendChatMessageRequest"> & {
  /**
   * @generated from field: chat.ChatMessage message = 1;
   */
  message?: ChatMessage;
};

/**
 * Describes the message chat.SendChatMessageRequest.
 * Use `create(SendChatMessageRequestSchema)` to create a new message.
 */
export declare const SendChatMessageRequestSchema: GenMessage<SendChatMessageRequest>;

/**
 * @generated from message chat.SendChatMessageResponse
 */
export declare type SendChatMessageResponse = Message<"chat.SendChatMessageResponse"> & {
  /**
   * @generated from field: chat.ChatMessage messages = 1;
   */
  messages?: ChatMessage;
};

/**
 * Describes the message chat.SendChatMessageResponse.
 * Use `create(SendChatMessageResponseSchema)` to create a new message.
 */
export declare const SendChatMessageResponseSchema: GenMessage<SendChatMessageResponse>;

/**
 * @generated from message chat.DropTableRequest
 */
export declare type DropTableRequest = Message<"chat.DropTableRequest"> & {
  /**
   * @generated from field: string table_name = 1;
   */
  tableName: string;
};

/**
 * Describes the message chat.DropTableRequest.
 * Use `create(DropTableRequestSchema)` to create a new message.
 */
export declare const DropTableRequestSchema: GenMessage<DropTableRequest>;

/**
 * @generated from message chat.DropTableResponse
 */
export declare type DropTableResponse = Message<"chat.DropTableResponse"> & {
};

/**
 * Describes the message chat.DropTableResponse.
 * Use `create(DropTableResponseSchema)` to create a new message.
 */
export declare const DropTableResponseSchema: GenMessage<DropTableResponse>;

/**
 * @generated from message chat.DeleteAllUsersRequest
 */
export declare type DeleteAllUsersRequest = Message<"chat.DeleteAllUsersRequest"> & {
};

/**
 * Describes the message chat.DeleteAllUsersRequest.
 * Use `create(DeleteAllUsersRequestSchema)` to create a new message.
 */
export declare const DeleteAllUsersRequestSchema: GenMessage<DeleteAllUsersRequest>;

/**
 * @generated from message chat.DeleteAllUsersResponse
 */
export declare type DeleteAllUsersResponse = Message<"chat.DeleteAllUsersResponse"> & {
};

/**
 * Describes the message chat.DeleteAllUsersResponse.
 * Use `create(DeleteAllUsersResponseSchema)` to create a new message.
 */
export declare const DeleteAllUsersResponseSchema: GenMessage<DeleteAllUsersResponse>;

/**
 * @generated from service chat.ChatService
 */
export declare const ChatService: GenService<{
  /**
   * @generated from rpc chat.ChatService.CreateUser
   */
  createUser: {
    methodKind: "unary";
    input: typeof CreateUserRequestSchema;
    output: typeof CreateUserResponseSchema;
  },
  /**
   * @generated from rpc chat.ChatService.GetUser
   */
  getUser: {
    methodKind: "unary";
    input: typeof GetUserRequestSchema;
    output: typeof GetUserResponseSchema;
  },
  /**
   * @generated from rpc chat.ChatService.DeleteUser
   */
  deleteUser: {
    methodKind: "unary";
    input: typeof DeleteUserRequestSchema;
    output: typeof DeleteUserResponseSchema;
  },
  /**
   * @generated from rpc chat.ChatService.UpdateUser
   */
  updateUser: {
    methodKind: "unary";
    input: typeof UpdateUserRequestSchema;
    output: typeof UpdateUserResponseSchema;
  },
  /**
   * @generated from rpc chat.ChatService.GetAllUsers
   */
  getAllUsers: {
    methodKind: "unary";
    input: typeof GetAllUsersRequestSchema;
    output: typeof GetAllUsersResponseSchema;
  },
  /**
   * @generated from rpc chat.ChatService.GetChatMessages
   */
  getChatMessages: {
    methodKind: "unary";
    input: typeof GetChatMessagesRequestSchema;
    output: typeof GetChatMessagesResponseSchema;
  },
  /**
   * @generated from rpc chat.ChatService.SendChatMessage
   */
  sendChatMessage: {
    methodKind: "unary";
    input: typeof SendChatMessageRequestSchema;
    output: typeof SendChatMessageResponseSchema;
  },
}>;

